Lybrary App:

A. Uygulamanin amaci:
    Kitaplarin kategorilerine ayrilarak kayit altina alinmasini saglayacak bir uygulama olacaktir.
    Uygulamada hem kitaplar icin hem de kategorileri icin CRUD (create, read, update, delete) islemleri yapilabilecektir.

B. Is sirasi:
    1. Dependensies:
        - json-server
        - axios
        - redux ve react-redux 
        - react-router-dom
        - UI kutuphanesi olarak:
            * bootstrap
            * react-icon library
            * ant-design

    2. Veri yapisinin ve json-server yapisinin kurulmasi (db.json)
    3. Redux altyapisinin kurulmasi:
        - !!!  Storda bulunacak statlere karar vermek !!! (booksState, categoriesState)
          (daha sonradan da ekleme yapilabilir: redux esnektir)
    4. Router yapisinin kurulmasi (page routes=>react-router-dom)
    5. Uygulama acilirken redux icerisindeki statleri doldurmak.
    6. Add book senaryosu:
        - Bu sayfanin amaci kullanicidan kitap bilgilerini alip servera
          gonderip kaydettirmektir. Bunun icin kitap bilgilerini alacak bir 
          forma ihtiyacimiz vardir. Alinan bilgiler servera basariyla 
          kaydedildikten sonra  AYNI EKLEME ISLEMI STORA DA YAPILMALIDIR.
        



NOTLAR:

NOTLAR:
 -local state = component'ın sadece kendisi için geçerli olan durumların
 saklandığı state (useState)
 -global state = uygulama içerisindeki diğer componentların ortak olarak
 kullanmak isteyecekleri stateler (store)

 -override : ezmek, üzerine yazmak/ öncekini geçersiz kıl; benim yazdığımı
 geçerli kıl


    Arastirilmasi gereken konular !!!
 -Next Topics:
    ->middleware, redux-thunk,logger
    ->authantication, authorization
    ->login/register sistemi nasıl işler, frontend tarafında nasıl yönetilir
    ->token ne demektir (jwt)
    -> free react tampletes


-> bir react projesini indirdigin zaman mutlaka terminalde npm install yapmalisin.
